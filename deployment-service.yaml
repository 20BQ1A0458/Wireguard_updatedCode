apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: node-wireguard
  namespace: auth
spec:
  serviceName: "node-wireguard"
  replicas: 2
  selector:
    matchLabels:
      app: node-wireguard
  template:
    metadata:
      labels:
        app: node-wireguard
    spec:
      serviceAccountName: jenkins
      initContainers:
        - name: wireguard-setup
          image: ubuntu:latest
          command:
            - /bin/bash
            - -c
            - |
              apt-get update && apt-get install -y \
                wireguard \
                wireguard-tools \
                iproute2 \
                iptables \
                iputils-ping \
                curl \
                ufw \
                && apt-get clean && rm -rf /var/lib/apt/lists/*
              # Generate WireGuard private and public keys
              PRIVATE_KEY=$(wg genkey)
              PUBLIC_KEY=$(echo "$PRIVATE_KEY" | wg pubkey)
              # Use the pod's hostname as POD_NAME
              POD_NAME=$(hostname)
              POD_INDEX=$(echo "$POD_NAME" | grep -oE '[0-9]+$')
              LISTEN_PORT=$((51820 + POD_INDEX))
              PEER_IP="10.8.0.$((1 + POD_INDEX))"
              PEER_PUBLIC_KEY=$(cat /etc/wireguard/peer-publickey.txt) # Here, you would inject the other peer's public key

              # Save keys and configuration to /etc/wireguard
              mkdir -p /etc/wireguard
              echo "$PRIVATE_KEY" > /etc/wireguard/privatekey
              echo "$PUBLIC_KEY" > /etc/wireguard/publickey
              # Write the WireGuard configuration file
              cat <<EOF > /etc/wireguard/wg0.conf
              [Interface]
              PrivateKey=$PRIVATE_KEY
              Address=10.8.0.$((1 + POD_INDEX))/24
              ListenPort=$LISTEN_PORT
              SaveConfig = true
              PreUp = ufw allow in on wg0
              PreUp = iptables -A INPUT -i wg0 -j ACCEPT
              PostUp = ufw route allow in on wg0 out on eth+
              PostUp = iptables -t nat -I POSTROUTING -o eth+ -j MASQUERADE
              PostDown = ufw route delete allow in on eth+ out on enX0
              PostDown = iptables -t nat -D POSTROUTING -o eth+ -j MASQUERADE
              PreDown = iptables -D INPUT -i wg0 -j ACCEPT

              [Peer]
              PublicKey=$PEER_PUBLIC_KEY
              AllowedIPs=10.8.0.2/32  # Peer IP
              Endpoint=10.8.0.$((1 + POD_INDEX)):51820
              EOF
              # Enable IP forwarding
              echo 1 > /proc/sys/net/ipv4/ip_forward
              sysctl -p
              # Bring up the WireGuard interface
              wg-quick up wg0 || echo "WireGuard setup failed."
          securityContext:
            privileged: true
            capabilities:
              add:
                - NET_ADMIN
          volumeMounts:
            - name: wireguard-config
              mountPath: /etc/wireguard
      containers:
        - name: node-wireguard
          image: bhargavram458/node-wireguard:latest
          ports:
            - containerPort: 4000   # Node.js app
              protocol: TCP
            - containerPort: 51820  # WireGuard UDP port
              protocol: UDP
          env:
            - name: NODE_ENV
              value: production
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          volumeMounts:
            - name: wireguard-config
              mountPath: /etc/wireguard
      volumes:
        - name: wireguard-config
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: node-wireguard-tcp
  namespace: auth
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-internal: "false"
spec:
  type: LoadBalancer
  selector:
    app: node-wireguard
  ports:
    - name: tcp-traffic
      protocol: TCP
      port: 4000
      targetPort: 4000
---
apiVersion: v1
kind: Service
metadata:
  name: node-wireguard-udp
  namespace: auth
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-internal: "false"
spec:
  type: LoadBalancer
  selector:
    app: node-wireguard
  ports:
    - name: udp-traffic-51820
      protocol: UDP
      port: 51820
      targetPort: 51820
    - name: udp-traffic-51821
      protocol: UDP
      port: 51821
      targetPort: 51821


